# Build recipe for libuv.
#
# Exit immediately on any error
set -e

program=libuv
version=v1.50.0
pkgversion="${version#v*}"
release=0

# Define a category for the output of the package name
pkgcategory=libs

tarname=${program}-${version}.tar.gz

# Remote source(s)
fetch=https://dist.libuv.org/dist/${version}/$tarname

homepage=https://www.libuv.org
license=MIT

description="
An asynchronous I/O library.

libuv is a multi-platform support library with a focus on asynchronous
I/O.  See $homepage for more information.
"

# Source documentation
docs="AUTHORS CONTRIBUTING.md LICENSE* MAINTAINERS.md README.md"
docsdir="${docdir}/${program}-${pkgversion}"
jobs=4

build()
{
    unpack "${tardir}/$tarname"

    cd "$srcdir"

    # Set sane permissions
    chmod -R u+w,go-w,a+rX-s .

    sh ./autogen.sh

    ./configure CPPFLAGS="$QICPPFLAGS" \
    CFLAGS="$QICFLAGS" LDFLAGS="$QILDFLAGS" \
     $configure_args \
     --libdir=/usr/lib \
     --mandir=$mandir \
     --docdir=$docsdir \
     --enable-static=no \
     --enable-shared=yes \
     --build="$(gcc -dumpmachine)"

    make -j${jobs} V=1
    make -j${jobs} DESTDIR="$destdir" install-strip

    # Compress and link man pages (if needed)
    if test -d "${destdir}/$mandir"
    then
        (
            cd "${destdir}/$mandir"
            find . -type f -exec lzip -9 {} +
            find . -type l | while read -r file
            do
                ln -sf "$(readlink -- "$file").lz" "${file}.lz"
                rm -- "$file"
            done
        )
    fi

    # Copy documentation
    mkdir -p "${destdir}/$docsdir"
    cp -p $docs "${destdir}/$docsdir"
}
