# Build recipe for elogind.
#
# Exit immediately on any error
set -e

program=elogind
version=255.17
release=0

# Define a category for the output of the package name
pkgcategory=daemon

tarname=${program}-v${version}.tar.gz

# Remote source(s)
fetch=https://github.com/elogind/elogind/archive/v$version/$tarname

description="Standalone fork of systemd's elogind"

homepage=https://github.com/elogind/elogind
license="GPL-2.0-or-later LGPL-2.1-or-later"

build()
{
    unpack "${tardir}/$tarname"

    cd "$srcdir"

    # Set sane permissions
    chmod -R u+w,go-w,a+rX-s .

    rm -rf BUILD
    mkdir BUILD
    cd BUILD

    patch -p1 -d .. < "${worktree}/patches-255/getdents.patch" 
    patch -p1 -d .. < "${worktree}/patches-255/gshadow.patch" 
    patch -p1 -d .. < "${worktree}/patches-255/no-bash.patch" 
    # patch -p1 -d .. < "${worktree}/patches-255/no-runtime-dir.patch" 
    patch -p1 -d .. < "${worktree}/patches-255/rlim-max.patch" 
    patch -p1 -d .. < "${worktree}/patches-255/strerror_r.patch" 
    patch -p1 -d .. < "${worktree}/patches-255/strerror_r_1.patch" 
    patch -p1 -d .. < "${worktree}/patches-255/tests.patch" 
    patch -p1 -d .. < "${worktree}/patches-255/xxx-musl-fixes.patch" 

    CPPFLAGS="$QICPPFLAGS" CFLAGS="$QICFLAGS" LDFLAGS="$QILDFLAGS" \
    meson setup $configure_args \
        -Ddefault-kill-user-processes=false \
        -Dhalt-path=/sbin/halt \
        -Dman=disabled \
        -Dpolkit=enabled \
        -Dreboot-path=/sbin/reboot \
        -Dtests=false \
        -Dutmp=false \
        -Dpamconfdir=/etc/pam.d \
        -Dudevrulesdir=/lib/udev/rules.d \
        -Ddbuspolicydir=/etc/dbus-1/system.d \
        -Dcgroup-controller=elogind \
	..

    ninja -j2
    DESTDIR="$destdir" ninja -j2 install
    ln -sfv libelogind.pc "$destdir"/usr/lib/pkgconfig/libsystemd.pc
    ln -sfvn elogind "$destdir"/usr/include/systemd 

    install -Dm644 ../src/systemd/sd-id128.h "$destdir"/usr/include
    install -Dm644 ../src/systemd/_sd-common.h "$destdir"/usr/include

    cd ..
}
