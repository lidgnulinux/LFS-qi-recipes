# Build recipe for wget2.
#
# Exit immediately on any error
set -e

program=wget2
version=2.2.0
release=2

# Define a category for the output of the package name
pkgcategory=networking

tarname=${program}-${version}.tar.gz

# Remote source(s)
fetch=https://ftp.gnu.org/gnu/wget/$tarname

description="
The non-interactive network downloader (version 2).

GNU Wget2 is the successor of GNU Wget, a file and recursive website
downloader.  Designed and written from scratch it wraps around libwget,
that provides the basic functions needed by a web client.

Wget2 works multi-threaded and uses many features to allow fast operation.

In many cases Wget2 downloads much faster than Wget1.x due to HTTP2,
HTTP compression, parallel connections and use of If-Modified-Since
HTTP header.
"

homepage=https://www.gnu.org/software/wget
license="GPLv3+, LGPLv3+"

# Source documentation
docs="AUTHORS COPYING* ChangeLog NEWS README.md"
docsdir="${docdir}/${program}-${version}"
jobs=4

build()
{
    unpack "${tardir}/$tarname"

    cd "$srcdir"

    # Set sane permissions
    chmod -R u+w,go-w,a+rX-s .

    ./configure CPPFLAGS="$QICPPFLAGS" CFLAGS="$QICFLAGS" \
    LDFLAGS="$QILDFLAGS" \
     $configure_args \
     --infodir=$infodir \
     --mandir=$mandir \
     --enable-static=no \
     --enable-shared=yes \
     --with-ssl=gnutls \
     --with-gpgme-prefix=/usr \
     --without-included-regex \
     --with-zlib \
     --with-lzip \
     --with-bzip2 \
     --with-lzma \
     --with-zstd \
     --without-brotlidec \
     --build="$(gcc -dumpmachine)"

    make -j${jobs} V=1
    make -j${jobs} DESTDIR="$destdir" install

    # This binary is the same as the main binary "wget2"
    rm "${destdir}/usr/bin/wget2_noinstall"

    # Compress info documents deleting index file for the package
    if test -d "${destdir}/$infodir"
    then
        rm -f "${destdir}/${infodir}/dir"
        lzip -9 "${destdir}/${infodir}"/*
    fi

    # Compress and link man pages (if needed)
    if test -d "${destdir}/$mandir"
    then
        (
            cd "${destdir}/$mandir"
            find . -type f -exec lzip -9 {} +
            find . -type l | while read -r file
            do
                ln -sf "$(readlink -- "$file").lz" "${file}.lz"
                rm -- "$file"
            done
        )
    fi

    # Copy documentation
    mkdir -p "${destdir}/$docsdir"
    cp -p $docs "${destdir}/$docsdir"
}
