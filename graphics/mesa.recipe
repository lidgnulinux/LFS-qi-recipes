# Build recipe for mesa.
#
# Exit immediately on any error
set -e

program=mesa
version=25.1.7
release=0
pkgcategory=xorg_mesa

tarname=${program}-${version/_/-}.tar.xz
fetch=https://mesa.freedesktop.org/archive/$tarname

description="
Mesa is an OpenGL compatible 3-D graphics library.

The Mesa project began as an open-source implementation of the OpenGL
specification - a system for rendering interactive 3D graphics.
"

homepage=https://www.mesa3d.org/
license=MIT

docs="CODEOWNERS README.rst VERSION"
docsdir="${docdir}/${program}-${version}"
jobs=4
srcdir=mesa-${version/_/-}

build()
{
    unpack "${tardir}/$tarname"

    cd "$srcdir"

    # Set sane permissions
    chmod -R u+w,go-w,a+rX-s .

    rm -rf BUILD
    mkdir BUILD
    cd BUILD

    export CFLAGS="$CFLAGS -O2 -g1"
    export CXXFLAGS="$CXXFLAGS -O2 -g1"
    export CPPFLAGS="$CPPFLAGS -O2 -g1"

    meson setup $configure_args \
     --buildtype=release \
     --strip \
     -Ddri-drivers-path=/usr/lib/dri \
     -Dglx=dri \
     -Dplatforms=x11,wayland \
     -Dgallium-drivers=i915,crocus \
     -Dvulkan-drivers="" \
     -Dgallium-xa=enabled \
     -Dlmsensors=enabled \
     -Degl=enabled \
     -Dgles1=enabled \
     -Dgles2=enabled \
     -Dosmesa=false \
     -Dopengl=true \
     -Dgallium-nine=false \
     -Dllvm=disabled \
     -Dshared-llvm=disabled \
     -Dshared-glapi=enabled \
     -Dvalgrind=disabled \
     -Db_lto=false \
     ..

    ninja -j${jobs}
    DESTDIR="$destdir" ninja -j${jobs} install

    unset -v MESA_GIT_SHA1_OVERRIDE

    cd ../

    # Handle .new files via graft(1), if any
    if test -d "${destdir}/etc"
    then
        touch "${destdir}/etc/.graft-config"
    fi
    touch "${destdir}/usr/share/drirc.d/.graft-config"

    # Compress and link man pages (if needed)
    if test -d "${destdir}/$mandir"
    then
        (
            cd "${destdir}/$mandir"
            find . -type f -exec lzip -9 {} +
            find . -type l | while read -r file
            do
                ln -sf "$(readlink -- "$file").lz" "${file}.lz"
                rm -- "$file"
            done
        )
    fi

    # Copy documentation
    mkdir -p "${destdir}/$docsdir"
    cp -p $docs "${destdir}/$docsdir"
}
